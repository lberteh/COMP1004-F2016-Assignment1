<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DNiW/D9y17BUTdmLgwAAAABJRU5ErkJggg==
</value>
  </data>
</root>