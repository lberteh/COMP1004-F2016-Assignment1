<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>